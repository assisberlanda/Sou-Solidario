import express from "express";
import { createServer } from "node:http";
import { config } from "dotenv"; // NecessÃ¡rio para carregar SESSION_SECRET
import { setupVite, serveStatic } from "./vite"; // Importa funÃ§Ãµes do Vite
import { setupAuth } from "./auth"; // Importa a configuraÃ§Ã£o de autenticaÃ§Ã£o
import { registerRoutes } from "./routes"; // Importa o registro de rotas principais

config(); // Carrega variÃ¡veis de ambiente do arquivo .env

const app = express();
const server = createServer(app); // Cria o servidor HTTP

// Middleware para processar JSON no corpo das requisiÃ§Ãµes
app.use(express.json());

// --- ConfiguraÃ§Ã£o de AutenticaÃ§Ã£o ---
// Isso configura as sessÃµes e as rotas /api/login, /api/register, /api/logout, /api/user
setupAuth(app);

// --- Registro de Rotas Principais ---
// Isso registra as rotas /api/campaigns, /api/donations, etc.
// Elas usarÃ£o o 'storage' que, neste modo, Ã© a MemStorage em memÃ³ria
registerRoutes(app);

// --- IntegraÃ§Ã£o com o Frontend (Vite) ---
// Em ambiente de desenvolvimento (npm run dev), usamos o middleware do Vite.
// Em ambiente de produÃ§Ã£o (npm run build && npm start), servimos os arquivos estÃ¡ticos construÃ­dos.
if (process.env.NODE_ENV !== "production") {
  console.log("Modo de desenvolvimento: Usando middleware Vite");
  setupVite(app, server); // Passa o servidor HTTP para o HMR do Vite
} else {
  console.log("Modo de produÃ§Ã£o: Servindo arquivos estÃ¡ticos da pasta dist");
  serveStatic(app); // Serve a pasta 'dist/public' construÃ­da pelo Vite build
}

// Iniciar servidor HTTP
const port = 5000;
const host = "localhost"; // Geralmente localhost para desenvolvimento local

server.listen(port, () => {
  console.log(`ðŸš€ Servidor Express rodando em http://${host}:${port}`);
  if (process.env.NODE_ENV !== "production") {
    console.log(`Frontend development server integrado.`);
  } else {
     console.log(`Servindo frontend estÃ¡tico.`);
  }
});